//**************************************************************************************************
// Name:			Matheus Leitao	
// Student Number:	148 300 171
// Email:			mfleitao@myseneca.ca	
// Workshop:		Workshop #7: at_home
//**************************************************************************************************

1. Does the Hero class need to know about the existence of the SuperHero class? 
(Hint: search for “SuperHero” in Hero.cpp)

No, Hero class doesn't need to know about SuperHero because Hero is the base class, so it's SuperHeros'
parent. 


2. Does the SuperHero class need to know about the existence of the Hero class? 
(Hint: search for “Hero” in SuperHero.cpp)

Yes, SuperHero class needs actually the Hero because it inherits Hero's member. So, SuperHero class is 
a derived class; it's not self-sufficient, it depends on Hero's functions.


3. The program prints out “Ancient Battle!” when two Heroes fight. It prints out “Super Fight!” when 
two SuperHeroes fight. When you made a Hero fight a SuperHero, what did it print out?

It prints “Ancient Battle!” because once we have an object that the type is of Base class (Hero), the 
function operator called is from the parent class.


4. True or False: is the following definition for main valid? Explain. 
int main() { 
	Hero("Achilles", 20, 6) * Hero("Hector", 30, 5); 
}

TRUE. We have two objects which the type of is "Hero" then they "fight". Hector is the winner. The point is
that those objects aren't only being stored in variables, but they are still objects.


5. True or False: is the following definition for main valid? Explain. 
int main() { 
	(Hero("Achilles", 20, 6) * Hero("Hector", 30, 5)) * (Hero("Atalanta", 10, 3) * Hero("Hippolyta", 10, 2));
}

TRUE. First it runs "Atalanta vs Hippolyta", then it runs "Achilles vs Hector". Finally, it runs the result of 
these two parentheses, which is "Hector vs Atalanta". 

	





